# Generated by Django 5.2.4 on 2025-07-19 19:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('payments', '0002_recenttransaction'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='recenttransaction',
            name='transaction_type',
            field=models.CharField(choices=[('payment', 'Payment'), ('payout', 'Payout'), ('refund', 'Refund'), ('commission', 'Commission'), ('adjustment', 'Adjustment'), ('deposit', 'Deposit'), ('withdrawal', 'Withdrawal'), ('earning', 'Earning'), ('tip', 'Tip')], help_text='Type of transaction', max_length=20),
        ),
        migrations.CreateModel(
            name='PayoutRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payout_type', models.CharField(choices=[('instant', 'Instant Payout'), ('standard', 'Standard Payout')], help_text='Type of payout', max_length=20)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Requested amount', max_digits=10)),
                ('fee_amount', models.DecimalField(decimal_places=2, default=0, help_text='Fee for instant payout', max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, help_text='Amount after fees', max_digits=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', help_text='Request status', max_length=20)),
                ('reference', models.CharField(help_text='Unique payout reference', max_length=120, unique=True)),
                ('bank_reference', models.CharField(blank=True, help_text='Bank transfer reference', max_length=120)),
                ('requested_at', models.DateTimeField(auto_now_add=True)),
                ('processed_at', models.DateTimeField(blank=True, help_text='When payout was processed', null=True)),
                ('completed_at', models.DateTimeField(blank=True, help_text='When payout was completed', null=True)),
                ('provider', models.ForeignKey(help_text='Provider requesting payout', on_delete=django.db.models.deletion.CASCADE, related_name='payout_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payout Request',
                'verbose_name_plural': 'Payout Requests',
                'ordering': ['-requested_at'],
            },
        ),
        migrations.CreateModel(
            name='ProviderWallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('available_balance', models.DecimalField(decimal_places=2, default=0, help_text='Balance available for withdrawal', max_digits=10)),
                ('pending_balance', models.DecimalField(decimal_places=2, default=0, help_text='Balance pending from recent jobs', max_digits=10)),
                ('total_withdrawn', models.DecimalField(decimal_places=2, default=0, help_text='Total amount withdrawn all time', max_digits=10)),
                ('last_payout_date', models.DateTimeField(blank=True, help_text='Date of last payout', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.OneToOneField(help_text='Provider who owns this wallet', on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Provider Wallet',
                'verbose_name_plural': 'Provider Wallets',
            },
        ),
        migrations.CreateModel(
            name='EarningsHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date of earnings')),
                ('jobs_count', models.PositiveIntegerField(default=0, help_text='Number of jobs completed')),
                ('gross_amount', models.DecimalField(decimal_places=2, default=0, help_text='Total earnings before commission', max_digits=10)),
                ('commission_amount', models.DecimalField(decimal_places=2, default=0, help_text='Platform commission', max_digits=10)),
                ('tips_amount', models.DecimalField(decimal_places=2, default=0, help_text='Tips received', max_digits=10)),
                ('net_amount', models.DecimalField(decimal_places=2, default=0, help_text='Net earnings after commission', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('provider', models.ForeignKey(help_text='Provider who earned this', on_delete=django.db.models.deletion.CASCADE, related_name='earnings_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Earnings History',
                'verbose_name_plural': 'Earnings Histories',
                'ordering': ['-date'],
                'unique_together': {('provider', 'date')},
            },
        ),
    ]
